version: "3.9"


# TODO: lock down UID/GID

services:

### WEB APPS ###
  # https://github.com/advplyr/audiobookshelf
  audiobookshelf:
    container_name: audiobooks
    image: ghcr.io/advplyr/audiobookshelf:latest
    environment:
      - AUDIOBOOKSHELF_UID=997
      - AUDIOBOOKSHELF_GID=992
    volumes:
      - /data/audiobookshelf/audiobooks:/audiobooks
      - /data/audiobookshelf/podcasts:/podcasts
      - /data/audiobookshelf/config:/config
      - /data/audiobookshelf/metadata:/metadata
    restart: always


  # MTG draft - dr4ft.info
  draft:
    build: ./draft
    container_name: draft
    restart: always


  # Statistics/graphing platform
  grafana:
    image: grafana/grafana


  # Launcher page. Server status, webapp management
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    extra_hosts:
      - "greenhouse.lan:192.168.70.1" # Needs the extra host. If excluded, you have to reference health-check services by docker container
    volumes:
      - /data/homepage/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations
    restart: always


  # Movie/show streaming
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=999
      - PGID=994
      - TZ=US
    ports:
      - 8096:8096 # TODO remove this. Need to figure out how to make jellyfin player work better with self signed certs
    volumes:
      - /data/jellyfin/config:/config
      - /data/jellyfin/shows:/data/tvshows
      - /data/jellyfin/movies:/data/movies
    restart: always


  # Self hosted wiki - as the name implies
  wikijs:
    image: lscr.io/linuxserver/wikijs:latest
    container_name: wikijs
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=US
    volumes:
      - /data/wiki/config:/config
      - /data/wiki/data:/data
    restart: always


### SYSTEM SERVICES ###
  # use glances for monitoring (similar to htop)
  # https://glances.readthedocs.io/en/latest/docker.html
  # TODO: add password?
  #glances:
  #  image: nicolargo/glances:alpine-latest
  #  container_name: glances
  #  pid: host
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  environment:
  #    - "GLANCES_OPT=-w"
  #  restart: always


  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=system-monitor
      - DOCKER_INFLUXDB_INIT_BUCKET=system-monitor
      - DOCKER_INFLUXDB_DB=influx
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
    ports:
      - 8086:8086 # TODO remove global port
    volumes:
      - /data/influxdb/lib:/var/lib/influxdb
      - /data/influxdb/etc:/etc/influxdb2
    restart: always

  # Add NFS
  # https://hub.docker.com/r/itsthenetwork/nfs-server-alpine
  nfs:
    image: itsthenetwork/nfs-server-alpine:latest-arm
    container_name: nfs
    volumes:
      - /data:/data:z
    environment:
      - "SHARED_DIRECTORY=/data"
    privileged: true
    network_mode: host
    restart: always


  # Webserver
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80 # uncomment to enable http TODO: disable again. Needed for jellyfin
      - 443:443 # https
      - 5432:5432 # postgres
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/www/:/data/www/
      - ./nginx/keys/:/etc/ssl/private/
      - ./nginx/certs/:/etc/ssl/certs/
      - ./nginx/snippets:/etc/nginx/snippets/
    restart: always


  # Add Samba for Windows peeps
  # https://hub.docker.com/r/dperson/samba
  #  samba:
  #    image: dperson/samba
  #    container_name: samba
  #    restart: always
  #    command: " -u 'dataman;ilikemesomedata' -u 'public;4publicaccess' -s 'data;/exposed;yes;no;yes;all;none;dataman,public;' -n -r"
  #    ports:
  #      - "137:137/udp"
  #      - "138:138/udp"
  #      - "139:139/tcp"
  #      - "445:445/tcp"
  #    volumes:
  #      - /exposed:/exposed:z

  sysmon:
    build:
      context: ./sysmon
        args:
          - SYSMON_BRANCH=sysmon-v0.1
    volumes:
      - ./sysmon/settings.yaml:/sysmon/settings.yaml
    network_mode: host
    restart: always


### NETWORKING SERVICES ###
  # dns/dhcp server
  dnsmasq:
    build: ./dnsmasq
    container_name: dnsmasq
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: always


  # configure hotspot AP
  hostapd:
    build: ./hostapd
    container_name: hostapd
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: always


  # openvpn connection to the outside world
  openvpn:
    build: ./openvpn
    container_name: openvpn
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: unless-stopped # disabled until interplay with wireguard is fixed


  # db connection
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: root
      POSTGRES_DB: testing
    restart: always


  # VPN connection from the outside world to lan
  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - SERVERURL=woodshed.cc
      - SERVERPORT=51820
      - PEERS=laptop
      - PEERDNS=192.168.70.1
      - INTERNAL_SUBNET= 192.168.68.0
      - ALLOWEDIPS=0.0.0.0/0
    volumes:
      - /data/wireguard:/config
      - /lib/modules:/lib/modules
    network_mode: host
    restart: always
